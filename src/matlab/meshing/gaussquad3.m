function [xx, ww] = gaussquad3(order, nvert)
%GAUSSQUAD3 3D Gaussian quadrature integration
%   [X, W] = GAUSSQUAD3(N, Nvert) returns Gaussian integration base points
%   and weights for numerical integration over stadard 3D elements.
% Parameters:
%   N     : Number of Gaussian points.
%   Nvert : Number of vertices. 4 for standard TETRA, 6 for standard PENTA
%           and 8 for standard HEXA elements. The standard TETRA's
%           coordinates are
%           [(0,0,0), (1,0,0), (0,1,0), (0,0,1)]
%           The standard PENTA element's coordinates are
%           [(0,0,-1), (1,0,-1), (0,1,-1), (0,0,1), (1,0,1), (0,1,1)]
%           The standard HEXA element's coordinates are
%           [(-1,-1,1), (1,-1,1), (1,1,1), (-1,1,1),...
%            (-1,-1,1), (1,-1,1), (1,1,1), (-1,1,1)]
%   X     : Gaussian quadrature base points
%   W     : Gaussian quadrature weights
%
% Tetrahedra rules are from
% http://www.cfd-online.com/Wiki/Code:_Quadrature_on_Tetrahedra

% See also: gaussquad, gaussquad2, vert2gauss, geo2gauss

%   Copyright 2008-2015 P. Fiala P.Rucz
%   Budapest University of Technology and Economics
%   Dept. of Telecommunications

% Last modified 2015.03.05.
%% Parameter check
narginchk(2, 2);

%%
switch nvert
    case 8
        [xi, w] = gaussquad1(order); % Linear Gauss quad over (-1, +1)
        [eta, xi, zeta] = meshgrid(xi,xi,xi);  % base points over unit cube
        W = (w * w.');                % weights over cube
        w = (W(:) * w.');             
        xx = [xi(:) eta(:) zeta(:)];
        ww = w(:);
    case 6
        [xi3, w3] = gaussquad2(order, 3);           % TRIA Gauss
        [xi2, w2] = gaussquad1(order);              % line Gauss
        x = repmat(xi3(:,1), 1, length(w2));        % merge the two
        y = repmat(xi3(:,2), 1, length(w2));
        z = repmat(xi2.', length(w3), 1);
        w = w3 * w2.';
        xx = [x(:) y(:) z(:)];
        ww = w(:);
    case 4
        switch order
           case 1   %  Z4, K1,  N=4
             x = [0.5854101966249685, 0.1381966011250105, 0.1381966011250105, 0.1381966011250105]; 
             y = [0.1381966011250105, 0.1381966011250105, 0.1381966011250105, 0.5854101966249685];
             z = [0.1381966011250105, 0.1381966011250105, 0.5854101966249685, 0.1381966011250105];
             w = [1/4, 1/4, 1/4, 1/4]/6;
           case 2   %  Z5, K2  N=5
             x = [1/4, 1/2, 1/6, 1/6, 1/6];
             y = [1/4, 1/6, 1/6, 1/6, 1/2];
             z = [1/4, 1/6, 1/6, 1/2, 1/6];
             w = [-16/20, 9/20, 9/20, 9/20, 9/20]/6;
           case 3   %  K4  N=11
             x = [0.2500000000000000, 0.7857142857142857, 0.0714285714285714, 0.0714285714285714, 0.0714285714285714, ...
                  0.1005964238332008, 0.3994035761667992, 0.3994035761667992, 0.3994035761667992, 0.1005964238332008, 0.1005964238332008];
             y = [0.2500000000000000, 0.0714285714285714, 0.0714285714285714, 0.0714285714285714, 0.7857142857142857, ...
                  0.3994035761667992, 0.1005964238332008, 0.3994035761667992, 0.1005964238332008, 0.3994035761667992, 0.1005964238332008];
             z = [0.2500000000000000, 0.0714285714285714, 0.0714285714285714, 0.7857142857142857, 0.0714285714285714, ...
                  0.3994035761667992, 0.3994035761667992, 0.1005964238332008, 0.1005964238332008, 0.1005964238332008, 0.3994035761667992];
             w = [-0.0789333333333333, 0.0457333333333333, 0.0457333333333333, 0.0457333333333333, 0.0457333333333333, ...
                  0.1493333333333333, 0.1493333333333333, 0.1493333333333333, 0.1493333333333333, 0.1493333333333333, 0.1493333333333333]/6;
           case 4  %K6  N=15
             x = [0.2500000000000000, 0.0000000000000000, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, ...
                  0.7272727272727273, 0.0909090909090909, 0.0909090909090909, 0.0909090909090909, 0.4334498464263357, ...
                  0.0665501535736643, 0.0665501535736643, 0.0665501535736643, 0.4334498464263357, 0.4334498464263357];
             y = [0.2500000000000000, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.0000000000000000, ...
                  0.0909090909090909, 0.0909090909090909, 0.0909090909090909, 0.7272727272727273, 0.0665501535736643, ...
                  0.4334498464263357, 0.0665501535736643, 0.4334498464263357, 0.0665501535736643, 0.4334498464263357];
             z = [0.2500000000000000, 0.3333333333333333, 0.3333333333333333, 0.0000000000000000, 0.3333333333333333, ...
                  0.0909090909090909, 0.0909090909090909, 0.7272727272727273, 0.0909090909090909, 0.0665501535736643, ...
                  0.0665501535736643, 0.4334498464263357, 0.4334498464263357, 0.4334498464263357, 0.0665501535736643];
             w = [0.1817020685825351, 0.0361607142857143, 0.0361607142857143, 0.0361607142857143, 0.0361607142857143, ...
                  0.0698714945161738, 0.0698714945161738, 0.0698714945161738, 0.0698714945161738, 0.0656948493683187, ...
                  0.0656948493683187, 0.0656948493683187, 0.0656948493683187, 0.0656948493683187, 0.0656948493683187]/6;
            otherwise 
                error('Order not implemented yet for TETRA');
        end
        xx = [x(:) y(:) z(:)];
        ww = w(:);
    otherwise
        error('NiHu:gaussquad3:argValue',...
            'Input argument Nvert should be 4 for TETRA, 6 for PENTA and 8 for HEXA');
end
end
